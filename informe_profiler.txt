Flat profile:

Each sample counts as 0.01 seconds.
  %   cumulative   self              self     total           
 time   seconds   seconds    calls  ms/call  ms/call  name    
 58.23      3.68     3.68  3575105     0.00     0.00  Matrix::initMatrix()
 32.44      5.73     2.05   811126     0.00     0.00  Matrix::Matrix(Matrix const&)
  2.69      5.90     0.17 173084156     0.00     0.00  Matrix::operator()(int, int) const
  1.27      5.98     0.08     4627     0.02     0.04  IERS(double&, double&, double&, double&, double&, double&, double&, double&, double&, Matrix, double, char)
  1.11      6.05     0.07                             _init
  0.63      6.09     0.04 10370314     0.00     0.00  Matrix::operator()(int) const
  0.63      6.13     0.04    17228     0.00     0.02  AccelHarmonic(Matrix, Matrix, int, int)
  0.55      6.17     0.04  2736327     0.00     0.00  Matrix::~Matrix()
  0.47      6.20     0.03   408463     0.00     0.00  Matrix::operator*(double)
  0.32      6.21     0.02 57180622     0.00     0.00  Matrix::columnas()
  0.32      6.24     0.02   113712     0.00     0.00  Matrix::Matrix(Matrix, Matrix)
  0.32      6.25     0.02    17228     0.00     0.00  Legendre(Matrix&, Matrix&, int, int, double)
  0.32      6.28     0.02     9160     0.00     0.01  NutAngles(double&, double&, double)
  0.24      6.29     0.01  6894960     0.00     0.00  Matrix::filas()
  0.16      6.30     0.01   838911     0.00     0.00  Matrix::operator=(Matrix const&)
  0.16      6.31     0.01     9349     0.00     0.00  Matrix::Matrix(int, int, double*, int)
  0.16      6.32     0.01     2472     0.00     2.01  JPL_Eph_DE430(Matrix&, Matrix&, Matrix&, Matrix&, Matrix&, Matrix&, Matrix&, Matrix&, Matrix&, Matrix&, Matrix&, double)
  0.00      6.32     0.00  1772343     0.00     0.00  Matrix::Matrix(int, int)
  0.00      6.32     0.00   341661     0.00     0.00  Matrix::operator+(Matrix const&)
  0.00      6.32     0.00   327658     0.00     0.00  Matrix::slice(int, int)
  0.00      6.32     0.00   306973     0.00     0.00  operator*(double, Matrix)
  0.00      6.32     0.00   299676     0.00     0.00  Matrix::operator-(Matrix const&)
  0.00      6.32     0.00    75643     0.00     0.00  Matrix::operator*(Matrix const&)
  0.00      6.32     0.00    66714     0.00     0.00  Matrix::norm()
  0.00      6.32     0.00    45340     0.00     0.00  Matrix::transponer()
  0.00      6.32     0.00    39598     0.00     0.00  Matrix::operator+(double)
  0.00      6.32     0.00    29664     0.00     0.00  Matrix::Matrix(double, double, double)
  0.00      6.32     0.00    27192     0.00     0.11  Cheb3D(double, double, double, double, Matrix, Matrix, Matrix)
  0.00      6.32     0.00    24720     0.00     0.01  AccelPointMass(Matrix, Matrix, double)
  0.00      6.32     0.00    18367     0.00     0.00  R_z(double)
  0.00      6.32     0.00    17274     0.00     0.00  norm(Matrix)
  0.00      6.32     0.00    13740     0.00     0.00  R_x(double)
  0.00      6.32     0.00    10582     0.00     0.00  Matrix::getColumna(int)
  0.00      6.32     0.00     9161     0.00     0.00  R_y(double)
  0.00      6.32     0.00     9160     0.00     0.00  MeanObliquity(double)
  0.00      6.32     0.00     4627     0.00     0.00  timediff(double, double, double&, double&, double&, double&, double&)
  0.00      6.32     0.00     4626     0.00     0.00  Frac(double)
  0.00      6.32     0.00     4626     0.00     0.00  gmst(double)
  0.00      6.32     0.00     4580     0.00     0.01  EqnEquinox(double)
  0.00      6.32     0.00     4580     0.00     0.00  PoleMatrix(double, double)
  0.00      6.32     0.00     4580     0.00     0.01  PrecMatrix(double, double)
  0.00      6.32     0.00     4580     0.00     0.01  gast(double)
  0.00      6.32     0.00     4580     0.00     0.01  GHAMatrix(double)
  0.00      6.32     0.00     4580     0.00     0.01  NutMatrix(double)
  0.00      6.32     0.00     2521     0.00     0.00  sign_(double, double)
  0.00      6.32     0.00     2472     0.00     2.24  Accel(double, Matrix)
  0.00      6.32     0.00     2472     0.00     0.00  Mjday_TDB(double)
  0.00      6.32     0.00     2472     0.00     0.00  Matrix::getFila(int)
  0.00      6.32     0.00     2108     0.00     0.19  G_AccelHarmonic(Matrix, Matrix, int, int)
  0.00      6.32     0.00     2108     0.00     0.31  VarEqn(double, Matrix)
  0.00      6.32     0.00      276     0.00     0.00  dot(Matrix, Matrix)
  0.00      6.32     0.00      276     0.00     0.00  Matrix::inverse()
  0.00      6.32     0.00      138     0.00     0.03  MeasUpdate(Matrix&, Matrix&, double, double, double, Matrix, Matrix&, int)
  0.00      6.32     0.00      138     0.00     0.00  Matrix::Matrix()
  0.00      6.32     0.00       94     0.00    66.32  DEInteg(Matrix (*)(double, Matrix), double, double, double, double, double, Matrix&)
  0.00      6.32     0.00       92     0.00     0.02  AzElPa(double&, double&, Matrix&, Matrix&, Matrix)
  0.00      6.32     0.00       47     0.00     0.00  mjday(int, int, int, int, int, double)
  0.00      6.32     0.00       46     0.00     0.01  TimeUpdate(Matrix&, Matrix, double)
  0.00      6.32     0.00        2     0.00     0.00  std::operator&(std::_Ios_Fmtflags, std::_Ios_Fmtflags)
  0.00      6.32     0.00        1     0.00     2.29  DE430Coeff()
  0.00      6.32     0.00        1     0.00     0.27  eop19620101()
  0.00      6.32     0.00        1     0.00     0.00  LTC(double, double)
  0.00      6.32     0.00        1     0.00     0.01  __static_initialization_and_destruction_0(int, int)
  0.00      6.32     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      6.32     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      6.32     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      6.32     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      6.32     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      6.32     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      6.32     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      6.32     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      6.32     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      6.32     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      6.32     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      6.32     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      6.32     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      6.32     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      6.32     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      6.32     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      6.32     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      6.32     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      6.32     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      6.32     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      6.32     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      6.32     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      6.32     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      6.32     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      6.32     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      6.32     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      6.32     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      6.32     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      6.32     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      6.32     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      6.32     0.00        1     0.00     0.00  GEOS3()
  0.00      6.32     0.00        1     0.00     0.03  GGM03S()
  0.00      6.32     0.00        1     0.00     0.00  Position(double, double, double)
  0.00      6.32     0.00        1     0.00     0.00  std::ios_base::setf(std::_Ios_Fmtflags, std::_Ios_Fmtflags)
  0.00      6.32     0.00        1     0.00     0.00  std::setprecision(int)
  0.00      6.32     0.00        1     0.00     0.00  std::operator&=(std::_Ios_Fmtflags&, std::_Ios_Fmtflags)
  0.00      6.32     0.00        1     0.00     0.00  std::operator~(std::_Ios_Fmtflags)
  0.00      6.32     0.00        1     0.00     0.00  std::operator|=(std::_Ios_Fmtflags&, std::_Ios_Fmtflags)
  0.00      6.32     0.00        1     0.00     0.00  std::operator|(std::_Ios_Fmtflags, std::_Ios_Fmtflags)

 %         the percentage of the total running time of the
time       program used by this function.

cumulative a running sum of the number of seconds accounted
 seconds   for by this function and those listed above it.

 self      the number of seconds accounted for by this
seconds    function alone.  This is the major sort for this
           listing.

calls      the number of times this function was invoked, if
           this function is profiled, else blank.

 self      the average number of milliseconds spent in this
ms/call    function per call, if this function is profiled,
	   else blank.

 total     the average number of milliseconds spent in this
ms/call    function and its descendents per call, if this
	   function is profiled, else blank.

name       the name of the function.  This is the minor sort
           for this listing. The index shows the location of
	   the function in the gprof listing. If the index is
	   in parenthesis it shows where it would appear in
	   the gprof listing if it were to be printed.

Copyright (C) 2012-2022 Free Software Foundation, Inc.

Copying and distribution of this file, with or without modification,
are permitted in any medium without royalty provided the copyright
notice and this notice are preserved.

		     Call graph (explanation follows)


granularity: each sample hit covers 4 byte(s) for 0.16% of 6.32 seconds

index % time    self  children    called     name
                                                 <spontaneous>
[1]     98.9    0.00    6.25                 main [1]
                0.00    6.23      94/94          DEInteg(Matrix (*)(double, Matrix), double, double, double, double, double, Matrix&) [2]
                0.00    0.00     138/138         MeasUpdate(Matrix&, Matrix&, double, double, double, Matrix, Matrix&, int) [44]
                0.00    0.00       1/1           DE430Coeff() [46]
                0.00    0.00    1794/327658      Matrix::slice(int, int) [13]
                0.00    0.00      47/4627        IERS(double&, double&, double&, double&, double&, double&, double&, double&, double&, Matrix, double, char) [19]
                0.00    0.00      92/92          AzElPa(double&, double&, Matrix&, Matrix&, Matrix) [47]
                0.00    0.00     463/811126      Matrix::Matrix(Matrix const&) [7]
                0.00    0.00    1104/75643       Matrix::operator*(Matrix const&) [22]
                0.00    0.00       1/1           eop19620101() [49]
                0.00    0.00      46/46          TimeUpdate(Matrix&, Matrix, double) [50]
                0.00    0.00     230/838911      Matrix::operator=(Matrix const&) [9]
                0.00    0.00     144/1772343     Matrix::Matrix(int, int) [8]
                0.00    0.00     138/299676      Matrix::operator-(Matrix const&) [17]
                0.00    0.00      46/306973      operator*(double, Matrix) [15]
                0.00    0.00    3922/2736327     Matrix::~Matrix() [30]
                0.00    0.00      46/18367       R_z(double) [38]
                0.00    0.00      46/45340       Matrix::transponer() [26]
                0.00    0.00       1/1           GGM03S() [51]
                0.00    0.00    5136/10370314     Matrix::operator()(int) const [29]
                0.00    0.00       1/1           LTC(double, double) [55]
                0.00    0.00       1/9349        Matrix::Matrix(int, int, double*, int) [37]
                0.00    0.00    1851/173084156     Matrix::operator()(int, int) const [18]
                0.00    0.00       1/1           Position(double, double, double) [56]
                0.00    0.00       1/1           GEOS3() [57]
                0.00    0.00     138/138         Matrix::Matrix() [72]
                0.00    0.00      47/4627        timediff(double, double, double&, double&, double&, double&, double&) [67]
                0.00    0.00      46/4626        gmst(double) [69]
                0.00    0.00      46/17274       norm(Matrix) [65]
                0.00    0.00       1/47          mjday(int, int, int, int, int, double) [73]
                0.00    0.00       1/1           std::setprecision(int) [106]
-----------------------------------------------
                0.00    6.23      94/94          main [1]
[2]     98.6    0.00    6.23      94         DEInteg(Matrix (*)(double, Matrix), double, double, double, double, double, Matrix&) [2]
                0.00    5.53    2472/2472        Accel(double, Matrix) [3]
                0.00    0.65    2108/2108        VarEqn(double, Matrix) [10]
                0.02    0.01    6927/811126      Matrix::Matrix(Matrix const&) [7]
                0.00    0.01    8537/838911      Matrix::operator=(Matrix const&) [9]
                0.01    0.00 1350832/10370314     Matrix::operator()(int) const [29]
                0.00    0.00    3675/306973      operator*(double, Matrix) [15]
                0.00    0.00    3675/341661      Matrix::operator+(Matrix const&) [14]
                0.00    0.00 2580240/173084156     Matrix::operator()(int, int) const [18]
                0.00    0.00    1504/1772343     Matrix::Matrix(int, int) [8]
                0.00    0.00    1328/10582       Matrix::getColumna(int) [42]
                0.00    0.00     188/9349        Matrix::Matrix(int, int, double*, int) [37]
                0.00    0.00   21877/2736327     Matrix::~Matrix() [30]
                0.00    0.00    2521/2521        sign_(double, double) [70]
-----------------------------------------------
                0.00    5.53    2472/2472        DEInteg(Matrix (*)(double, Matrix), double, double, double, double, double, Matrix&) [2]
[3]     87.5    0.00    5.53    2472         Accel(double, Matrix) [3]
                0.01    4.95    2472/2472        JPL_Eph_DE430(Matrix&, Matrix&, Matrix&, Matrix&, Matrix&, Matrix&, Matrix&, Matrix&, Matrix&, Matrix&, Matrix&, double) [4]
                0.00    0.13   24720/24720       AccelPointMass(Matrix, Matrix, double) [21]
                0.08    0.03   32136/811126      Matrix::Matrix(Matrix const&) [7]
                0.04    0.05    2472/4627        IERS(double&, double&, double&, double&, double&, double&, double&, double&, double&, Matrix, double, char) [19]
                0.01    0.04    2472/17228       AccelHarmonic(Matrix, Matrix, int, int) [16]
                0.00    0.03   29664/327658      Matrix::slice(int, int) [13]
                0.00    0.03   27192/1772343     Matrix::Matrix(int, int) [8]
                0.00    0.03    2472/4580        NutMatrix(double) [25]
                0.00    0.03   24720/838911      Matrix::operator=(Matrix const&) [9]
                0.00    0.03   24720/341661      Matrix::operator+(Matrix const&) [14]
                0.00    0.02    2472/4580        GHAMatrix(double) [32]
                0.00    0.01    2472/4580        PrecMatrix(double, double) [35]
                0.00    0.01    2472/4580        PoleMatrix(double, double) [40]
                0.00    0.01    7416/75643       Matrix::operator*(Matrix const&) [22]
                0.00    0.00    2472/113712      Matrix::Matrix(Matrix, Matrix) [20]
                0.00    0.00  158208/2736327     Matrix::~Matrix() [30]
                0.00    0.00    2472/4627        timediff(double, double, double&, double&, double&, double&, double&) [67]
                0.00    0.00    2472/2472        Mjday_TDB(double) [71]
-----------------------------------------------
                0.01    4.95    2472/2472        Accel(double, Matrix) [3]
[4]     78.5    0.01    4.95    2472         JPL_Eph_DE430(Matrix&, Matrix&, Matrix&, Matrix&, Matrix&, Matrix&, Matrix&, Matrix&, Matrix&, Matrix&, Matrix&, double) [4]
                0.00    3.06   27192/27192       Cheb3D(double, double, double, double, Matrix, Matrix, Matrix) [6]
                0.62    0.25  247200/811126      Matrix::Matrix(Matrix const&) [7]
                0.00    0.34  333720/838911      Matrix::operator=(Matrix const&) [9]
                0.00    0.31  279336/327658      Matrix::slice(int, int) [13]
                0.02    0.13  111240/113712      Matrix::Matrix(Matrix, Matrix) [20]
                0.00    0.06   51912/306973      operator*(double, Matrix) [15]
                0.00    0.04   39552/39598       Matrix::operator+(double) [28]
                0.00    0.03   29664/29664       Matrix::Matrix(double, double, double) [31]
                0.00    0.03   27192/45340       Matrix::transponer() [26]
                0.00    0.02   22248/341661      Matrix::operator+(Matrix const&) [14]
                0.01    0.00  840480/2736327     Matrix::~Matrix() [30]
                0.00    0.00    2472/2472        Matrix::getFila(int) [45]
                0.00    0.00    2472/299676      Matrix::operator-(Matrix const&) [17]
                0.00    0.00 2551104/173084156     Matrix::operator()(int, int) const [18]
                0.00    0.00  397992/10370314     Matrix::operator()(int) const [29]
                0.00    0.00 1275552/57180622     Matrix::columnas() [36]
-----------------------------------------------
                0.01    0.00    9349/3575105     Matrix::Matrix(int, int, double*, int) [37]
                0.03    0.00   29664/3575105     Matrix::Matrix(double, double, double) [31]
                0.12    0.00  113712/3575105     Matrix::Matrix(Matrix, Matrix) [20]
                0.83    0.00  811126/3575105     Matrix::Matrix(Matrix const&) [7]
                0.86    0.00  838911/3575105     Matrix::operator=(Matrix const&) [9]
                1.82    0.00 1772343/3575105     Matrix::Matrix(int, int) [8]
[5]     58.2    3.68    0.00 3575105         Matrix::initMatrix() [5]
-----------------------------------------------
                0.00    3.06   27192/27192       JPL_Eph_DE430(Matrix&, Matrix&, Matrix&, Matrix&, Matrix&, Matrix&, Matrix&, Matrix&, Matrix&, Matrix&, Matrix&, double) [4]
[6]     48.5    0.00    3.06   27192         Cheb3D(double, double, double, double, Matrix, Matrix, Matrix) [6]
                1.17    0.48  464736/811126      Matrix::Matrix(Matrix const&) [7]
                0.01    0.48  464736/838911      Matrix::operator=(Matrix const&) [9]
                0.00    0.27  259560/299676      Matrix::operator-(Matrix const&) [17]
                0.00    0.27  259560/341661      Matrix::operator+(Matrix const&) [14]
                0.00    0.26  232368/306973      operator*(double, Matrix) [15]
                0.00    0.08   81576/1772343     Matrix::Matrix(int, int) [8]
                0.00    0.03   27192/408463      Matrix::operator*(double) [11]
                0.02    0.00 1297800/2736327     Matrix::~Matrix() [30]
                0.01    0.00 1557360/10370314     Matrix::operator()(int) const [29]
-----------------------------------------------
                0.00    0.00     276/811126      AzElPa(double&, double&, Matrix&, Matrix&, Matrix) [47]
                0.00    0.00     463/811126      main [1]
                0.02    0.01    6927/811126      DEInteg(Matrix (*)(double, Matrix), double, double, double, double, double, Matrix&) [2]
                0.03    0.01   10540/811126      VarEqn(double, Matrix) [10]
                0.04    0.02   17228/811126      AccelHarmonic(Matrix, Matrix, int, int) [16]
                0.08    0.03   31620/811126      G_AccelHarmonic(Matrix, Matrix, int, int) [12]
                0.08    0.03   32136/811126      Accel(double, Matrix) [3]
                0.62    0.25  247200/811126      JPL_Eph_DE430(Matrix&, Matrix&, Matrix&, Matrix&, Matrix&, Matrix&, Matrix&, Matrix&, Matrix&, Matrix&, Matrix&, double) [4]
                1.17    0.48  464736/811126      Cheb3D(double, double, double, double, Matrix, Matrix, Matrix) [6]
[7]     45.6    2.05    0.83  811126         Matrix::Matrix(Matrix const&) [7]
                0.83    0.00  811126/3575105     Matrix::initMatrix() [5]
-----------------------------------------------
                0.00    0.00       1/1772343     Position(double, double, double) [56]
                0.00    0.00       5/1772343     __static_initialization_and_destruction_0(int, int) [53]
                0.00    0.00     144/1772343     main [1]
                0.00    0.00     184/1772343     AzElPa(double&, double&, Matrix&, Matrix&, Matrix) [47]
                0.00    0.00     276/1772343     MeasUpdate(Matrix&, Matrix&, double, double, double, Matrix, Matrix&, int) [44]
                0.00    0.00     552/1772343     Matrix::inverse() [48]
                0.00    0.00    1504/1772343     DEInteg(Matrix (*)(double, Matrix), double, double, double, double, double, Matrix&) [2]
                0.00    0.00    2472/1772343     Matrix::getFila(int) [45]
                0.00    0.01    6324/1772343     VarEqn(double, Matrix) [10]
                0.00    0.01    9161/1772343     R_y(double) [43]
                0.00    0.01   10540/1772343     G_AccelHarmonic(Matrix, Matrix, int, int) [12]
                0.00    0.01   10582/1772343     Matrix::getColumna(int) [42]
                0.00    0.01   13740/1772343     R_x(double) [41]
                0.00    0.02   18367/1772343     R_z(double) [38]
                0.00    0.03   27192/1772343     Accel(double, Matrix) [3]
                0.00    0.04   39598/1772343     Matrix::operator+(double) [28]
                0.00    0.05   45340/1772343     Matrix::transponer() [26]
                0.00    0.05   51684/1772343     AccelHarmonic(Matrix, Matrix, int, int) [16]
                0.00    0.08   75643/1772343     Matrix::operator*(Matrix const&) [22]
                0.00    0.08   81576/1772343     Cheb3D(double, double, double, double, Matrix, Matrix, Matrix) [6]
                0.00    0.31  299676/1772343     Matrix::operator-(Matrix const&) [17]
                0.00    0.34  327658/1772343     Matrix::slice(int, int) [13]
                0.00    0.35  341661/1772343     Matrix::operator+(Matrix const&) [14]
                0.00    0.42  408463/1772343     Matrix::operator*(double) [11]
[8]     28.9    0.00    1.82 1772343         Matrix::Matrix(int, int) [8]
                1.82    0.00 1772343/3575105     Matrix::initMatrix() [5]
-----------------------------------------------
                0.00    0.00      46/838911      TimeUpdate(Matrix&, Matrix, double) [50]
                0.00    0.00     184/838911      AzElPa(double&, double&, Matrix&, Matrix&, Matrix) [47]
                0.00    0.00     230/838911      main [1]
                0.00    0.00     414/838911      MeasUpdate(Matrix&, Matrix&, double, double, double, Matrix, Matrix&, int) [44]
                0.00    0.01    6324/838911      G_AccelHarmonic(Matrix, Matrix, int, int) [12]
                0.00    0.01    8537/838911      DEInteg(Matrix (*)(double, Matrix), double, double, double, double, double, Matrix&) [2]
                0.00    0.03   24720/838911      Accel(double, Matrix) [3]
                0.00    0.34  333720/838911      JPL_Eph_DE430(Matrix&, Matrix&, Matrix&, Matrix&, Matrix&, Matrix&, Matrix&, Matrix&, Matrix&, Matrix&, Matrix&, double) [4]
                0.01    0.48  464736/838911      Cheb3D(double, double, double, double, Matrix, Matrix, Matrix) [6]
[9]     13.8    0.01    0.86  838911         Matrix::operator=(Matrix const&) [9]
                0.86    0.00  838911/3575105     Matrix::initMatrix() [5]
-----------------------------------------------
                0.00    0.65    2108/2108        DEInteg(Matrix (*)(double, Matrix), double, double, double, double, double, Matrix&) [2]
[10]    10.3    0.00    0.65    2108         VarEqn(double, Matrix) [10]
                0.00    0.41    2108/2108        G_AccelHarmonic(Matrix, Matrix, int, int) [12]
                0.04    0.04    2108/4627        IERS(double&, double&, double&, double&, double&, double&, double&, double&, double&, Matrix, double, char) [19]
                0.00    0.03    2108/17228       AccelHarmonic(Matrix, Matrix, int, int) [16]
                0.03    0.01   10540/811126      Matrix::Matrix(Matrix const&) [7]
                0.00    0.02    2108/4580        NutMatrix(double) [25]
                0.00    0.02   16864/327658      Matrix::slice(int, int) [13]
                0.00    0.01    2108/4580        GHAMatrix(double) [32]
                0.00    0.01    2108/4580        PrecMatrix(double, double) [35]
                0.00    0.01    8432/75643       Matrix::operator*(Matrix const&) [22]
                0.00    0.01    2108/4580        PoleMatrix(double, double) [40]
                0.00    0.01    6324/1772343     Matrix::Matrix(int, int) [8]
                0.00    0.00  177072/10370314     Matrix::operator()(int) const [29]
                0.00    0.00   52700/2736327     Matrix::~Matrix() [30]
                0.00    0.00  246636/173084156     Matrix::operator()(int, int) const [18]
                0.00    0.00    2108/4627        timediff(double, double, double&, double&, double&, double&, double&) [67]
-----------------------------------------------
                0.00    0.00     138/408463      MeasUpdate(Matrix&, Matrix&, double, double, double, Matrix, Matrix&, int) [44]
                0.00    0.03   27192/408463      Cheb3D(double, double, double, double, Matrix, Matrix, Matrix) [6]
                0.01    0.08   74160/408463      AccelPointMass(Matrix, Matrix, double) [21]
                0.02    0.32  306973/408463      operator*(double, Matrix) [15]
[11]     7.1    0.03    0.42  408463         Matrix::operator*(double) [11]
                0.00    0.42  408463/1772343     Matrix::Matrix(int, int) [8]
-----------------------------------------------
                0.00    0.41    2108/2108        VarEqn(double, Matrix) [10]
[12]     6.5    0.00    0.41    2108         G_AccelHarmonic(Matrix, Matrix, int, int) [12]
                0.03    0.21   12648/17228       AccelHarmonic(Matrix, Matrix, int, int) [16]
                0.08    0.03   31620/811126      Matrix::Matrix(Matrix const&) [7]
                0.00    0.02   18972/306973      operator*(double, Matrix) [15]
                0.00    0.01   12648/299676      Matrix::operator-(Matrix const&) [17]
                0.00    0.01   10540/1772343     Matrix::Matrix(int, int) [8]
                0.00    0.01    6324/838911      Matrix::operator=(Matrix const&) [9]
                0.00    0.01    6324/341661      Matrix::operator+(Matrix const&) [14]
                0.00    0.00   90644/2736327     Matrix::~Matrix() [30]
                0.00    0.00   25296/10370314     Matrix::operator()(int) const [29]
                0.00    0.00   18972/173084156     Matrix::operator()(int, int) const [18]
-----------------------------------------------
                0.00    0.00    1794/327658      main [1]
                0.00    0.02   16864/327658      VarEqn(double, Matrix) [10]
                0.00    0.03   29664/327658      Accel(double, Matrix) [3]
                0.00    0.31  279336/327658      JPL_Eph_DE430(Matrix&, Matrix&, Matrix&, Matrix&, Matrix&, Matrix&, Matrix&, Matrix&, Matrix&, Matrix&, Matrix&, double) [4]
[13]     5.7    0.00    0.36  327658         Matrix::slice(int, int) [13]
                0.00    0.34  327658/1772343     Matrix::Matrix(int, int) [8]
                0.02    0.00 6362940/10370314     Matrix::operator()(int) const [29]
-----------------------------------------------
                0.00    0.00     414/341661      MeasUpdate(Matrix&, Matrix&, double, double, double, Matrix, Matrix&, int) [44]
                0.00    0.00    3675/341661      DEInteg(Matrix (*)(double, Matrix), double, double, double, double, double, Matrix&) [2]
                0.00    0.01    6324/341661      G_AccelHarmonic(Matrix, Matrix, int, int) [12]
                0.00    0.02   22248/341661      JPL_Eph_DE430(Matrix&, Matrix&, Matrix&, Matrix&, Matrix&, Matrix&, Matrix&, Matrix&, Matrix&, Matrix&, Matrix&, double) [4]
                0.00    0.03   24720/341661      Accel(double, Matrix) [3]
                0.00    0.03   24720/341661      AccelPointMass(Matrix, Matrix, double) [21]
                0.00    0.27  259560/341661      Cheb3D(double, double, double, double, Matrix, Matrix, Matrix) [6]
[14]     5.6    0.00    0.35  341661         Matrix::operator+(Matrix const&) [14]
                0.00    0.35  341661/1772343     Matrix::Matrix(int, int) [8]
-----------------------------------------------
                0.00    0.00      46/306973      main [1]
                0.00    0.00    3675/306973      DEInteg(Matrix (*)(double, Matrix), double, double, double, double, double, Matrix&) [2]
                0.00    0.02   18972/306973      G_AccelHarmonic(Matrix, Matrix, int, int) [12]
                0.00    0.06   51912/306973      JPL_Eph_DE430(Matrix&, Matrix&, Matrix&, Matrix&, Matrix&, Matrix&, Matrix&, Matrix&, Matrix&, Matrix&, Matrix&, double) [4]
                0.00    0.26  232368/306973      Cheb3D(double, double, double, double, Matrix, Matrix, Matrix) [6]
[15]     5.4    0.00    0.34  306973         operator*(double, Matrix) [15]
                0.02    0.32  306973/408463      Matrix::operator*(double) [11]
-----------------------------------------------
                0.00    0.03    2108/17228       VarEqn(double, Matrix) [10]
                0.01    0.04    2472/17228       Accel(double, Matrix) [3]
                0.03    0.21   12648/17228       G_AccelHarmonic(Matrix, Matrix, int, int) [12]
[16]     5.1    0.04    0.28   17228         AccelHarmonic(Matrix, Matrix, int, int) [16]
                0.07    0.00 68377932/173084156     Matrix::operator()(int, int) const [18]
                0.04    0.02   17228/811126      Matrix::Matrix(Matrix const&) [7]
                0.00    0.05   51684/1772343     Matrix::Matrix(int, int) [8]
                0.02    0.03   17228/17228       Legendre(Matrix&, Matrix&, int, int, double) [27]
                0.00    0.04   34456/75643       Matrix::operator*(Matrix const&) [22]
                0.00    0.02   17228/45340       Matrix::transponer() [26]
                0.00    0.00  103368/2736327     Matrix::~Matrix() [30]
                0.00    0.00  258420/10370314     Matrix::operator()(int) const [29]
                0.00    0.00   17228/17274       norm(Matrix) [65]
-----------------------------------------------
                0.00    0.00     138/299676      main [1]
                0.00    0.00     138/299676      MeasUpdate(Matrix&, Matrix&, double, double, double, Matrix, Matrix&, int) [44]
                0.00    0.00    2472/299676      JPL_Eph_DE430(Matrix&, Matrix&, Matrix&, Matrix&, Matrix&, Matrix&, Matrix&, Matrix&, Matrix&, Matrix&, Matrix&, double) [4]
                0.00    0.01   12648/299676      G_AccelHarmonic(Matrix, Matrix, int, int) [12]
                0.00    0.03   24720/299676      AccelPointMass(Matrix, Matrix, double) [21]
                0.00    0.27  259560/299676      Cheb3D(double, double, double, double, Matrix, Matrix, Matrix) [6]
[17]     4.9    0.00    0.31  299676         Matrix::operator-(Matrix const&) [17]
                0.00    0.31  299676/1772343     Matrix::Matrix(int, int) [8]
-----------------------------------------------
                0.00    0.00      18/173084156     LTC(double, double) [55]
                0.00    0.00     184/173084156     GEOS3() [57]
                0.00    0.00     966/173084156     MeasUpdate(Matrix&, Matrix&, double, double, double, Matrix, Matrix&, int) [44]
                0.00    0.00    1851/173084156     main [1]
                0.00    0.00    1932/173084156     Matrix::inverse() [48]
                0.00    0.00   18972/173084156     G_AccelHarmonic(Matrix, Matrix, int, int) [12]
                0.00    0.00   32942/173084156     GGM03S() [51]
                0.00    0.00   82449/173084156     R_y(double) [43]
                0.00    0.00  123660/173084156     R_x(double) [41]
                0.00    0.00  165303/173084156     R_z(double) [38]
                0.00    0.00  246636/173084156     VarEqn(double, Matrix) [10]
                0.00    0.00  278369/173084156     eop19620101() [49]
                0.00    0.00 2330700/173084156     DE430Coeff() [46]
                0.00    0.00 2551104/173084156     JPL_Eph_DE430(Matrix&, Matrix&, Matrix&, Matrix&, Matrix&, Matrix&, Matrix&, Matrix&, Matrix&, Matrix&, Matrix&, double) [4]
                0.00    0.00 2580240/173084156     DEInteg(Matrix (*)(double, Matrix), double, double, double, double, double, Matrix&) [2]
                0.01    0.00 5272776/173084156     Matrix::Matrix(Matrix, Matrix) [20]
                0.01    0.00 8738640/173084156     NutAngles(double&, double&, double) [24]
                0.03    0.00 26376068/173084156     Legendre(Matrix&, Matrix&, int, int, double) [27]
                0.05    0.00 55903414/173084156     IERS(double&, double&, double&, double&, double&, double&, double&, double&, double&, Matrix, double, char) [19]
                0.07    0.00 68377932/173084156     AccelHarmonic(Matrix, Matrix, int, int) [16]
[18]     2.7    0.17    0.00 173084156         Matrix::operator()(int, int) const [18]
-----------------------------------------------
                0.00    0.00      47/4627        main [1]
                0.04    0.04    2108/4627        VarEqn(double, Matrix) [10]
                0.04    0.05    2472/4627        Accel(double, Matrix) [3]
[19]     2.6    0.08    0.08    4627         IERS(double&, double&, double&, double&, double&, double&, double&, double&, double&, Matrix, double, char) [19]
                0.05    0.00 55903414/173084156     Matrix::operator()(int, int) const [18]
                0.02    0.00 55903414/57180622     Matrix::columnas() [36]
                0.00    0.01    9254/10582       Matrix::getColumna(int) [42]
                0.00    0.00  115675/10370314     Matrix::operator()(int) const [29]
                0.00    0.00    9254/2736327     Matrix::~Matrix() [30]
-----------------------------------------------
                0.00    0.00    2472/113712      Accel(double, Matrix) [3]
                0.02    0.13  111240/113712      JPL_Eph_DE430(Matrix&, Matrix&, Matrix&, Matrix&, Matrix&, Matrix&, Matrix&, Matrix&, Matrix&, Matrix&, Matrix&, double) [4]
[20]     2.5    0.02    0.14  113712         Matrix::Matrix(Matrix, Matrix) [20]
                0.12    0.00  113712/3575105     Matrix::initMatrix() [5]
                0.01    0.00 6894408/6894960     Matrix::filas() [39]
                0.01    0.00 5272776/173084156     Matrix::operator()(int, int) const [18]
-----------------------------------------------
                0.00    0.13   24720/24720       Accel(double, Matrix) [3]
[21]     2.1    0.00    0.13   24720         AccelPointMass(Matrix, Matrix, double) [21]
                0.01    0.08   74160/408463      Matrix::operator*(double) [11]
                0.00    0.03   24720/299676      Matrix::operator-(Matrix const&) [17]
                0.00    0.03   24720/341661      Matrix::operator+(Matrix const&) [14]
                0.00    0.00   98880/2736327     Matrix::~Matrix() [30]
                0.00    0.00   49440/66714       Matrix::norm() [64]
-----------------------------------------------
                0.00    0.00       1/75643       LTC(double, double) [55]
                0.00    0.00      92/75643       TimeUpdate(Matrix&, Matrix, double) [50]
                0.00    0.00    1104/75643       main [1]
                0.00    0.00    1242/75643       MeasUpdate(Matrix&, Matrix&, double, double, double, Matrix, Matrix&, int) [44]
                0.00    0.00    4580/75643       PoleMatrix(double, double) [40]
                0.00    0.01    7416/75643       Accel(double, Matrix) [3]
                0.00    0.01    8432/75643       VarEqn(double, Matrix) [10]
                0.00    0.01    9160/75643       NutMatrix(double) [25]
                0.00    0.01    9160/75643       PrecMatrix(double, double) [35]
                0.00    0.04   34456/75643       AccelHarmonic(Matrix, Matrix, int, int) [16]
[22]     1.2    0.00    0.08   75643         Matrix::operator*(Matrix const&) [22]
                0.00    0.08   75643/1772343     Matrix::Matrix(int, int) [8]
-----------------------------------------------
                                                 <spontaneous>
[23]     1.1    0.07    0.00                 _init [23]
-----------------------------------------------
                0.01    0.01    4580/9160        EqnEquinox(double) [33]
                0.01    0.01    4580/9160        NutMatrix(double) [25]
[24]     0.8    0.02    0.03    9160         NutAngles(double&, double&, double) [24]
                0.01    0.01    9160/9349        Matrix::Matrix(int, int, double*, int) [37]
                0.01    0.00 8738640/173084156     Matrix::operator()(int, int) const [18]
                0.00    0.00    9160/2736327     Matrix::~Matrix() [30]
-----------------------------------------------
                0.00    0.02    2108/4580        VarEqn(double, Matrix) [10]
                0.00    0.03    2472/4580        Accel(double, Matrix) [3]
[25]     0.8    0.00    0.05    4580         NutMatrix(double) [25]
                0.01    0.01    4580/9160        NutAngles(double&, double&, double) [24]
                0.00    0.01    9160/13740       R_x(double) [41]
                0.00    0.01    9160/75643       Matrix::operator*(Matrix const&) [22]
                0.00    0.00    4580/18367       R_z(double) [38]
                0.00    0.00   18320/2736327     Matrix::~Matrix() [30]
                0.00    0.00    4580/9160        MeanObliquity(double) [66]
-----------------------------------------------
                0.00    0.00      46/45340       main [1]
                0.00    0.00      46/45340       TimeUpdate(Matrix&, Matrix, double) [50]
                0.00    0.00     276/45340       AzElPa(double&, double&, Matrix&, Matrix&, Matrix) [47]
                0.00    0.00     552/45340       MeasUpdate(Matrix&, Matrix&, double, double, double, Matrix, Matrix&, int) [44]
                0.00    0.02   17228/45340       AccelHarmonic(Matrix, Matrix, int, int) [16]
                0.00    0.03   27192/45340       JPL_Eph_DE430(Matrix&, Matrix&, Matrix&, Matrix&, Matrix&, Matrix&, Matrix&, Matrix&, Matrix&, Matrix&, Matrix&, double) [4]
[26]     0.7    0.00    0.05   45340         Matrix::transponer() [26]
                0.00    0.05   45340/1772343     Matrix::Matrix(int, int) [8]
-----------------------------------------------
                0.02    0.03   17228/17228       AccelHarmonic(Matrix, Matrix, int, int) [16]
[27]     0.7    0.02    0.03   17228         Legendre(Matrix&, Matrix&, int, int, double) [27]
                0.03    0.00 26376068/173084156     Matrix::operator()(int, int) const [18]
-----------------------------------------------
                0.00    0.00      46/39598       TimeUpdate(Matrix&, Matrix, double) [50]
                0.00    0.04   39552/39598       JPL_Eph_DE430(Matrix&, Matrix&, Matrix&, Matrix&, Matrix&, Matrix&, Matrix&, Matrix&, Matrix&, Matrix&, Matrix&, double) [4]
[28]     0.6    0.00    0.04   39598         Matrix::operator+(double) [28]
                0.00    0.04   39598/1772343     Matrix::Matrix(int, int) [8]
-----------------------------------------------
                0.00    0.00       3/10370314     Position(double, double, double) [56]
                0.00    0.00    1656/10370314     dot(Matrix, Matrix) [52]
                0.00    0.00    1748/10370314     AzElPa(double&, double&, Matrix&, Matrix&, Matrix) [47]
                0.00    0.00    5136/10370314     main [1]
                0.00    0.00   25296/10370314     G_AccelHarmonic(Matrix, Matrix, int, int) [12]
                0.00    0.00  115675/10370314     IERS(double&, double&, double&, double&, double&, double&, double&, double&, double&, Matrix, double, char) [19]
                0.00    0.00  116184/10370314     Matrix::Matrix(double, double, double) [31]
                0.00    0.00  177072/10370314     VarEqn(double, Matrix) [10]
                0.00    0.00  258420/10370314     AccelHarmonic(Matrix, Matrix, int, int) [16]
                0.00    0.00  397992/10370314     JPL_Eph_DE430(Matrix&, Matrix&, Matrix&, Matrix&, Matrix&, Matrix&, Matrix&, Matrix&, Matrix&, Matrix&, Matrix&, double) [4]
                0.01    0.00 1350832/10370314     DEInteg(Matrix (*)(double, Matrix), double, double, double, double, double, Matrix&) [2]
                0.01    0.00 1557360/10370314     Cheb3D(double, double, double, double, Matrix, Matrix, Matrix) [6]
                0.02    0.00 6362940/10370314     Matrix::slice(int, int) [13]
[29]     0.6    0.04    0.00 10370314         Matrix::operator()(int) const [29]
-----------------------------------------------
                0.00    0.00       2/2736327     LTC(double, double) [55]
                0.00    0.00     184/2736327     TimeUpdate(Matrix&, Matrix, double) [50]
                0.00    0.00     276/2736327     Matrix::inverse() [48]
                0.00    0.00     736/2736327     AzElPa(double&, double&, Matrix&, Matrix&, Matrix) [47]
                0.00    0.00    3036/2736327     MeasUpdate(Matrix&, Matrix&, double, double, double, Matrix, Matrix&, int) [44]
                0.00    0.00    3922/2736327     main [1]
                0.00    0.00    9160/2736327     NutAngles(double&, double&, double) [24]
                0.00    0.00    9160/2736327     PoleMatrix(double, double) [40]
                0.00    0.00    9254/2736327     IERS(double&, double&, double&, double&, double&, double&, double&, double&, double&, Matrix, double, char) [19]
                0.00    0.00   18320/2736327     NutMatrix(double) [25]
                0.00    0.00   18320/2736327     PrecMatrix(double, double) [35]
                0.00    0.00   21877/2736327     DEInteg(Matrix (*)(double, Matrix), double, double, double, double, double, Matrix&) [2]
                0.00    0.00   52700/2736327     VarEqn(double, Matrix) [10]
                0.00    0.00   90644/2736327     G_AccelHarmonic(Matrix, Matrix, int, int) [12]
                0.00    0.00   98880/2736327     AccelPointMass(Matrix, Matrix, double) [21]
                0.00    0.00  103368/2736327     AccelHarmonic(Matrix, Matrix, int, int) [16]
                0.00    0.00  158208/2736327     Accel(double, Matrix) [3]
                0.01    0.00  840480/2736327     JPL_Eph_DE430(Matrix&, Matrix&, Matrix&, Matrix&, Matrix&, Matrix&, Matrix&, Matrix&, Matrix&, Matrix&, Matrix&, double) [4]
                0.02    0.00 1297800/2736327     Cheb3D(double, double, double, double, Matrix, Matrix, Matrix) [6]
[30]     0.6    0.04    0.00 2736327         Matrix::~Matrix() [30]
-----------------------------------------------
                0.00    0.03   29664/29664       JPL_Eph_DE430(Matrix&, Matrix&, Matrix&, Matrix&, Matrix&, Matrix&, Matrix&, Matrix&, Matrix&, Matrix&, Matrix&, double) [4]
[31]     0.5    0.00    0.03   29664         Matrix::Matrix(double, double, double) [31]
                0.03    0.00   29664/3575105     Matrix::initMatrix() [5]
                0.00    0.00  116184/10370314     Matrix::operator()(int) const [29]
-----------------------------------------------
                0.00    0.01    2108/4580        VarEqn(double, Matrix) [10]
                0.00    0.02    2472/4580        Accel(double, Matrix) [3]
[32]     0.5    0.00    0.03    4580         GHAMatrix(double) [32]
                0.00    0.02    4580/4580        gast(double) [34]
                0.00    0.00    4580/18367       R_z(double) [38]
-----------------------------------------------
                0.00    0.02    4580/4580        gast(double) [34]
[33]     0.4    0.00    0.02    4580         EqnEquinox(double) [33]
                0.01    0.01    4580/9160        NutAngles(double&, double&, double) [24]
                0.00    0.00    4580/9160        MeanObliquity(double) [66]
-----------------------------------------------
                0.00    0.02    4580/4580        GHAMatrix(double) [32]
[34]     0.4    0.00    0.02    4580         gast(double) [34]
                0.00    0.02    4580/4580        EqnEquinox(double) [33]
                0.00    0.00    4580/4626        gmst(double) [69]
-----------------------------------------------
                0.00    0.01    2108/4580        VarEqn(double, Matrix) [10]
                0.00    0.01    2472/4580        Accel(double, Matrix) [3]
[35]     0.4    0.00    0.02    4580         PrecMatrix(double, double) [35]
                0.00    0.01    9160/18367       R_z(double) [38]
                0.00    0.01    9160/75643       Matrix::operator*(Matrix const&) [22]
                0.00    0.00    4580/9161        R_y(double) [43]
                0.00    0.00   18320/2736327     Matrix::~Matrix() [30]
-----------------------------------------------
                0.00    0.00    1656/57180622     dot(Matrix, Matrix) [52]
                0.00    0.00 1275552/57180622     JPL_Eph_DE430(Matrix&, Matrix&, Matrix&, Matrix&, Matrix&, Matrix&, Matrix&, Matrix&, Matrix&, Matrix&, Matrix&, double) [4]
                0.02    0.00 55903414/57180622     IERS(double&, double&, double&, double&, double&, double&, double&, double&, double&, Matrix, double, char) [19]
[36]     0.3    0.02    0.00 57180622         Matrix::columnas() [36]
-----------------------------------------------
                0.00    0.00       1/9349        main [1]
                0.00    0.00     188/9349        DEInteg(Matrix (*)(double, Matrix), double, double, double, double, double, Matrix&) [2]
                0.01    0.01    9160/9349        NutAngles(double&, double&, double) [24]
[37]     0.3    0.01    0.01    9349         Matrix::Matrix(int, int, double*, int) [37]
                0.01    0.00    9349/3575105     Matrix::initMatrix() [5]
-----------------------------------------------
                0.00    0.00       1/18367       LTC(double, double) [55]
                0.00    0.00      46/18367       main [1]
                0.00    0.00    4580/18367       GHAMatrix(double) [32]
                0.00    0.00    4580/18367       NutMatrix(double) [25]
                0.00    0.01    9160/18367       PrecMatrix(double, double) [35]
[38]     0.3    0.00    0.02   18367         R_z(double) [38]
                0.00    0.02   18367/1772343     Matrix::Matrix(int, int) [8]
                0.00    0.00  165303/173084156     Matrix::operator()(int, int) const [18]
-----------------------------------------------
                0.00    0.00     552/6894960     dot(Matrix, Matrix) [52]
                0.01    0.00 6894408/6894960     Matrix::Matrix(Matrix, Matrix) [20]
[39]     0.2    0.01    0.00 6894960         Matrix::filas() [39]
-----------------------------------------------
                0.00    0.01    2108/4580        VarEqn(double, Matrix) [10]
                0.00    0.01    2472/4580        Accel(double, Matrix) [3]
[40]     0.2    0.00    0.01    4580         PoleMatrix(double, double) [40]
                0.00    0.00    4580/9161        R_y(double) [43]
                0.00    0.00    4580/13740       R_x(double) [41]
                0.00    0.00    4580/75643       Matrix::operator*(Matrix const&) [22]
                0.00    0.00    9160/2736327     Matrix::~Matrix() [30]
-----------------------------------------------
                0.00    0.00    4580/13740       PoleMatrix(double, double) [40]
                0.00    0.01    9160/13740       NutMatrix(double) [25]
[41]     0.2    0.00    0.01   13740         R_x(double) [41]
                0.00    0.01   13740/1772343     Matrix::Matrix(int, int) [8]
                0.00    0.00  123660/173084156     Matrix::operator()(int, int) const [18]
-----------------------------------------------
                0.00    0.00    1328/10582       DEInteg(Matrix (*)(double, Matrix), double, double, double, double, double, Matrix&) [2]
                0.00    0.01    9254/10582       IERS(double&, double&, double&, double&, double&, double&, double&, double&, double&, Matrix, double, char) [19]
[42]     0.2    0.00    0.01   10582         Matrix::getColumna(int) [42]
                0.00    0.01   10582/1772343     Matrix::Matrix(int, int) [8]
-----------------------------------------------
                0.00    0.00       1/9161        LTC(double, double) [55]
                0.00    0.00    4580/9161        PoleMatrix(double, double) [40]
                0.00    0.00    4580/9161        PrecMatrix(double, double) [35]
[43]     0.2    0.00    0.01    9161         R_y(double) [43]
                0.00    0.01    9161/1772343     Matrix::Matrix(int, int) [8]
                0.00    0.00   82449/173084156     Matrix::operator()(int, int) const [18]
-----------------------------------------------
                0.00    0.00     138/138         main [1]
[44]     0.1    0.00    0.00     138         MeasUpdate(Matrix&, Matrix&, double, double, double, Matrix, Matrix&, int) [44]
                0.00    0.00    1242/75643       Matrix::operator*(Matrix const&) [22]
                0.00    0.00     276/276         Matrix::inverse() [48]
                0.00    0.00     552/45340       Matrix::transponer() [26]
                0.00    0.00     414/838911      Matrix::operator=(Matrix const&) [9]
                0.00    0.00     414/341661      Matrix::operator+(Matrix const&) [14]
                0.00    0.00     276/1772343     Matrix::Matrix(int, int) [8]
                0.00    0.00     138/408463      Matrix::operator*(double) [11]
                0.00    0.00     138/299676      Matrix::operator-(Matrix const&) [17]
                0.00    0.00    3036/2736327     Matrix::~Matrix() [30]
                0.00    0.00     966/173084156     Matrix::operator()(int, int) const [18]
-----------------------------------------------
                0.00    0.00    2472/2472        JPL_Eph_DE430(Matrix&, Matrix&, Matrix&, Matrix&, Matrix&, Matrix&, Matrix&, Matrix&, Matrix&, Matrix&, Matrix&, double) [4]
[45]     0.0    0.00    0.00    2472         Matrix::getFila(int) [45]
                0.00    0.00    2472/1772343     Matrix::Matrix(int, int) [8]
-----------------------------------------------
                0.00    0.00       1/1           main [1]
[46]     0.0    0.00    0.00       1         DE430Coeff() [46]
                0.00    0.00 2330700/173084156     Matrix::operator()(int, int) const [18]
-----------------------------------------------
                0.00    0.00      92/92          main [1]
[47]     0.0    0.00    0.00      92         AzElPa(double&, double&, Matrix&, Matrix&, Matrix) [47]
                0.00    0.00     276/811126      Matrix::Matrix(Matrix const&) [7]
                0.00    0.00     276/45340       Matrix::transponer() [26]
                0.00    0.00     184/838911      Matrix::operator=(Matrix const&) [9]
                0.00    0.00     184/1772343     Matrix::Matrix(int, int) [8]
                0.00    0.00     736/2736327     Matrix::~Matrix() [30]
                0.00    0.00     276/276         dot(Matrix, Matrix) [52]
                0.00    0.00    1748/10370314     Matrix::operator()(int) const [29]
-----------------------------------------------
                0.00    0.00     276/276         MeasUpdate(Matrix&, Matrix&, double, double, double, Matrix, Matrix&, int) [44]
[48]     0.0    0.00    0.00     276         Matrix::inverse() [48]
                0.00    0.00     552/1772343     Matrix::Matrix(int, int) [8]
                0.00    0.00     276/2736327     Matrix::~Matrix() [30]
                0.00    0.00    1932/173084156     Matrix::operator()(int, int) const [18]
-----------------------------------------------
                0.00    0.00       1/1           main [1]
[49]     0.0    0.00    0.00       1         eop19620101() [49]
                0.00    0.00  278369/173084156     Matrix::operator()(int, int) const [18]
-----------------------------------------------
                0.00    0.00      46/46          main [1]
[50]     0.0    0.00    0.00      46         TimeUpdate(Matrix&, Matrix, double) [50]
                0.00    0.00      92/75643       Matrix::operator*(Matrix const&) [22]
                0.00    0.00      46/838911      Matrix::operator=(Matrix const&) [9]
                0.00    0.00      46/39598       Matrix::operator+(double) [28]
                0.00    0.00      46/45340       Matrix::transponer() [26]
                0.00    0.00     184/2736327     Matrix::~Matrix() [30]
-----------------------------------------------
                0.00    0.00       1/1           main [1]
[51]     0.0    0.00    0.00       1         GGM03S() [51]
                0.00    0.00   32942/173084156     Matrix::operator()(int, int) const [18]
-----------------------------------------------
                0.00    0.00     276/276         AzElPa(double&, double&, Matrix&, Matrix&, Matrix) [47]
[52]     0.0    0.00    0.00     276         dot(Matrix, Matrix) [52]
                0.00    0.00    1656/10370314     Matrix::operator()(int) const [29]
                0.00    0.00     552/6894960     Matrix::filas() [39]
                0.00    0.00    1656/57180622     Matrix::columnas() [36]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I_eopdata [54]
[53]     0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [53]
                0.00    0.00       5/1772343     Matrix::Matrix(int, int) [8]
-----------------------------------------------
                                                 <spontaneous>
[54]     0.0    0.00    0.00                 _GLOBAL__sub_I_eopdata [54]
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [53]
-----------------------------------------------
                0.00    0.00       1/1           main [1]
[55]     0.0    0.00    0.00       1         LTC(double, double) [55]
                0.00    0.00       1/9161        R_y(double) [43]
                0.00    0.00       1/18367       R_z(double) [38]
                0.00    0.00       1/75643       Matrix::operator*(Matrix const&) [22]
                0.00    0.00       2/2736327     Matrix::~Matrix() [30]
                0.00    0.00      18/173084156     Matrix::operator()(int, int) const [18]
-----------------------------------------------
                0.00    0.00       1/1           main [1]
[56]     0.0    0.00    0.00       1         Position(double, double, double) [56]
                0.00    0.00       1/1772343     Matrix::Matrix(int, int) [8]
                0.00    0.00       3/10370314     Matrix::operator()(int) const [29]
-----------------------------------------------
                0.00    0.00       1/1           main [1]
[57]     0.0    0.00    0.00       1         GEOS3() [57]
                0.00    0.00     184/173084156     Matrix::operator()(int, int) const [18]
                0.00    0.00      46/47          mjday(int, int, int, int, int, double) [73]
-----------------------------------------------
                0.00    0.00   17274/66714       norm(Matrix) [65]
                0.00    0.00   49440/66714       AccelPointMass(Matrix, Matrix, double) [21]
[64]     0.0    0.00    0.00   66714         Matrix::norm() [64]
-----------------------------------------------
                0.00    0.00      46/17274       main [1]
                0.00    0.00   17228/17274       AccelHarmonic(Matrix, Matrix, int, int) [16]
[65]     0.0    0.00    0.00   17274         norm(Matrix) [65]
                0.00    0.00   17274/66714       Matrix::norm() [64]
-----------------------------------------------
                0.00    0.00    4580/9160        EqnEquinox(double) [33]
                0.00    0.00    4580/9160        NutMatrix(double) [25]
[66]     0.0    0.00    0.00    9160         MeanObliquity(double) [66]
-----------------------------------------------
                0.00    0.00      47/4627        main [1]
                0.00    0.00    2108/4627        VarEqn(double, Matrix) [10]
                0.00    0.00    2472/4627        Accel(double, Matrix) [3]
[67]     0.0    0.00    0.00    4627         timediff(double, double, double&, double&, double&, double&, double&) [67]
-----------------------------------------------
                0.00    0.00    4626/4626        gmst(double) [69]
[68]     0.0    0.00    0.00    4626         Frac(double) [68]
-----------------------------------------------
                0.00    0.00      46/4626        main [1]
                0.00    0.00    4580/4626        gast(double) [34]
[69]     0.0    0.00    0.00    4626         gmst(double) [69]
                0.00    0.00    4626/4626        Frac(double) [68]
-----------------------------------------------
                0.00    0.00    2521/2521        DEInteg(Matrix (*)(double, Matrix), double, double, double, double, double, Matrix&) [2]
[70]     0.0    0.00    0.00    2521         sign_(double, double) [70]
-----------------------------------------------
                0.00    0.00    2472/2472        Accel(double, Matrix) [3]
[71]     0.0    0.00    0.00    2472         Mjday_TDB(double) [71]
-----------------------------------------------
                0.00    0.00     138/138         main [1]
[72]     0.0    0.00    0.00     138         Matrix::Matrix() [72]
-----------------------------------------------
                0.00    0.00       1/47          main [1]
                0.00    0.00      46/47          GEOS3() [57]
[73]     0.0    0.00    0.00      47         mjday(int, int, int, int, int, double) [73]
-----------------------------------------------
                0.00    0.00       1/2           std::operator&=(std::_Ios_Fmtflags&, std::_Ios_Fmtflags) [107]
                0.00    0.00       1/2           std::ios_base::setf(std::_Ios_Fmtflags, std::_Ios_Fmtflags) [105]
[74]     0.0    0.00    0.00       2         std::operator&(std::_Ios_Fmtflags, std::_Ios_Fmtflags) [74]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I__Z5Acceld6Matrix [128]
[75]     0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [75]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I__Z13AccelHarmonic6MatrixS_ii [117]
[76]     0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [76]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I__Z14AccelPointMass6MatrixS_d [119]
[77]     0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [77]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I__Z6AzElPaRdS_R6MatrixS1_S0_ [129]
[78]     0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [78]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I__Z6Cheb3Ddddd6MatrixS_S_ [130]
[79]     0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [79]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I__Z7DEIntegPF6MatrixdS_EdddddRS_ [132]
[80]     0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [80]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I__Z10EqnEquinoxd [111]
[81]     0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [81]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I__Z9GHAMatrixd [136]
[82]     0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [82]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I__Z15G_AccelHarmonic6MatrixS_ii [120]
[83]     0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [83]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I__Z8GeodeticRdS_S_6Matrix [133]
[84]     0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [84]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I__Z4IERSRdS_S_S_S_S_S_S_S_6Matrixdc [125]
[85]     0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [85]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I__Z13JPL_Eph_DE430R6MatrixS0_S0_S0_S0_S0_S0_S0_S0_S0_S0_d [118]
[86]     0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [86]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I__Z3LTCdd [121]
[87]     0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [87]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I__Z8LegendreR6MatrixS0_iid [134]
[88]     0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [88]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I__ZN6MatrixC2Ev [139]
[89]     0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [89]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I__ZN6MatrizC2ESt6vectorIdSaIdEEii [140]
[90]     0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [90]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I__Z10MeasUpdateR6MatrixS0_dddS_S0_i [112]
[91]     0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [91]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I__Z9NutAnglesRdS_d [137]
[92]     0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [92]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I__Z9NutMatrixd [138]
[93]     0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [93]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I__Z10PoleMatrixdd [113]
[94]     0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [94]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I__Z8Positionddd [135]
[95]     0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [95]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I__Z10PrecMatrixdd [114]
[96]     0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [96]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I__Z3R_xd [122]
[97]     0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [97]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I__Z3R_yd [123]
[98]     0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [98]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I__Z3R_zd [124]
[99]     0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [99]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I__Z10TimeUpdateR6MatrixS_d [115]
[100]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [100]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I__Z6VarEqnd6Matrix [131]
[101]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [101]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I__Z4gastd [126]
[102]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [102]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I__Z11eop19620101v [116]
[103]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [103]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I__Z4unit6Matrix [127]
[104]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [104]
-----------------------------------------------
                0.00    0.00       1/1           std::fixed(std::ios_base&) [251]
[105]    0.0    0.00    0.00       1         std::ios_base::setf(std::_Ios_Fmtflags, std::_Ios_Fmtflags) [105]
                0.00    0.00       1/1           std::operator~(std::_Ios_Fmtflags) [108]
                0.00    0.00       1/2           std::operator&(std::_Ios_Fmtflags, std::_Ios_Fmtflags) [74]
                0.00    0.00       1/1           std::operator&=(std::_Ios_Fmtflags&, std::_Ios_Fmtflags) [107]
                0.00    0.00       1/1           std::operator|=(std::_Ios_Fmtflags&, std::_Ios_Fmtflags) [109]
-----------------------------------------------
                0.00    0.00       1/1           main [1]
[106]    0.0    0.00    0.00       1         std::setprecision(int) [106]
-----------------------------------------------
                0.00    0.00       1/1           std::ios_base::setf(std::_Ios_Fmtflags, std::_Ios_Fmtflags) [105]
[107]    0.0    0.00    0.00       1         std::operator&=(std::_Ios_Fmtflags&, std::_Ios_Fmtflags) [107]
                0.00    0.00       1/2           std::operator&(std::_Ios_Fmtflags, std::_Ios_Fmtflags) [74]
-----------------------------------------------
                0.00    0.00       1/1           std::ios_base::setf(std::_Ios_Fmtflags, std::_Ios_Fmtflags) [105]
[108]    0.0    0.00    0.00       1         std::operator~(std::_Ios_Fmtflags) [108]
-----------------------------------------------
                0.00    0.00       1/1           std::ios_base::setf(std::_Ios_Fmtflags, std::_Ios_Fmtflags) [105]
[109]    0.0    0.00    0.00       1         std::operator|=(std::_Ios_Fmtflags&, std::_Ios_Fmtflags) [109]
                0.00    0.00       1/1           std::operator|(std::_Ios_Fmtflags, std::_Ios_Fmtflags) [110]
-----------------------------------------------
                0.00    0.00       1/1           std::operator|=(std::_Ios_Fmtflags&, std::_Ios_Fmtflags) [109]
[110]    0.0    0.00    0.00       1         std::operator|(std::_Ios_Fmtflags, std::_Ios_Fmtflags) [110]
-----------------------------------------------

 This table describes the call tree of the program, and was sorted by
 the total amount of time spent in each function and its children.

 Each entry in this table consists of several lines.  The line with the
 index number at the left hand margin lists the current function.
 The lines above it list the functions that called this function,
 and the lines below it list the functions this one called.
 This line lists:
     index	A unique number given to each element of the table.
		Index numbers are sorted numerically.
		The index number is printed next to every function name so
		it is easier to look up where the function is in the table.

     % time	This is the percentage of the `total' time that was spent
		in this function and its children.  Note that due to
		different viewpoints, functions excluded by options, etc,
		these numbers will NOT add up to 100%.

     self	This is the total amount of time spent in this function.

     children	This is the total amount of time propagated into this
		function by its children.

     called	This is the number of times the function was called.
		If the function called itself recursively, the number
		only includes non-recursive calls, and is followed by
		a `+' and the number of recursive calls.

     name	The name of the current function.  The index number is
		printed after it.  If the function is a member of a
		cycle, the cycle number is printed between the
		function's name and the index number.


 For the function's parents, the fields have the following meanings:

     self	This is the amount of time that was propagated directly
		from the function into this parent.

     children	This is the amount of time that was propagated from
		the function's children into this parent.

     called	This is the number of times this parent called the
		function `/' the total number of times the function
		was called.  Recursive calls to the function are not
		included in the number after the `/'.

     name	This is the name of the parent.  The parent's index
		number is printed after it.  If the parent is a
		member of a cycle, the cycle number is printed between
		the name and the index number.

 If the parents of the function cannot be determined, the word
 `<spontaneous>' is printed in the `name' field, and all the other
 fields are blank.

 For the function's children, the fields have the following meanings:

     self	This is the amount of time that was propagated directly
		from the child into the function.

     children	This is the amount of time that was propagated from the
		child's children to the function.

     called	This is the number of times the function called
		this child `/' the total number of times the child
		was called.  Recursive calls by the child are not
		listed in the number after the `/'.

     name	This is the name of the child.  The child's index
		number is printed after it.  If the child is a
		member of a cycle, the cycle number is printed
		between the name and the index number.

 If there are any cycles (circles) in the call graph, there is an
 entry for the cycle-as-a-whole.  This entry shows who called the
 cycle (as parents) and the members of the cycle (as children.)
 The `+' recursive calls entry shows the number of function calls that
 were internal to the cycle, and the calls entry for each member shows,
 for that member, how many times it was called from other members of
 the cycle.

Copyright (C) 2012-2022 Free Software Foundation, Inc.

Copying and distribution of this file, with or without modification,
are permitted in any medium without royalty provided the copyright
notice and this notice are preserved.

Index by function name

  [46] DE430Coeff()           [91] __static_initialization_and_destruction_0(int, int) [25] NutMatrix(double)
  [33] EqnEquinox(double)     [92] __static_initialization_and_destruction_0(int, int) [42] Matrix::getColumna(int)
  [44] MeasUpdate(Matrix&, Matrix&, double, double, double, Matrix, Matrix&, int) [93] __static_initialization_and_destruction_0(int, int) [5] Matrix::initMatrix()
  [40] PoleMatrix(double, double) [94] __static_initialization_and_destruction_0(int, int) [26] Matrix::transponer()
  [35] PrecMatrix(double, double) [95] __static_initialization_and_destruction_0(int, int) [64] Matrix::norm()
  [50] TimeUpdate(Matrix&, Matrix, double) [96] __static_initialization_and_destruction_0(int, int) [39] Matrix::filas()
  [49] eop19620101()          [97] __static_initialization_and_destruction_0(int, int) [13] Matrix::slice(int, int)
  [16] AccelHarmonic(Matrix, Matrix, int, int) [98] __static_initialization_and_destruction_0(int, int) [45] Matrix::getFila(int)
   [4] JPL_Eph_DE430(Matrix&, Matrix&, Matrix&, Matrix&, Matrix&, Matrix&, Matrix&, Matrix&, Matrix&, Matrix&, Matrix&, double) [99] __static_initialization_and_destruction_0(int, int) [48] Matrix::inverse()
  [66] MeanObliquity(double) [100] __static_initialization_and_destruction_0(int, int) [36] Matrix::columnas()
  [21] AccelPointMass(Matrix, Matrix, double) [101] __static_initialization_and_destruction_0(int, int) [7] Matrix::Matrix(Matrix const&)
  [12] G_AccelHarmonic(Matrix, Matrix, int, int) [102] __static_initialization_and_destruction_0(int, int) [20] Matrix::Matrix(Matrix, Matrix)
  [55] LTC(double, double)   [103] __static_initialization_and_destruction_0(int, int) [31] Matrix::Matrix(double, double, double)
  [41] R_x(double)           [104] __static_initialization_and_destruction_0(int, int) [37] Matrix::Matrix(int, int, double*, int)
  [43] R_y(double)            [68] Frac(double)            [8] Matrix::Matrix(int, int)
  [38] R_z(double)            [19] IERS(double&, double&, double&, double&, double&, double&, double&, double&, double&, Matrix, double, char) [72] Matrix::Matrix()
  [52] dot(Matrix, Matrix)    [34] gast(double)           [30] Matrix::~Matrix()
  [53] __static_initialization_and_destruction_0(int, int) [69] gmst(double) [9] Matrix::operator=(Matrix const&)
  [75] __static_initialization_and_destruction_0(int, int) [65] norm(Matrix) [17] Matrix::operator-(Matrix const&)
  [76] __static_initialization_and_destruction_0(int, int) [3] Accel(double, Matrix) [22] Matrix::operator*(Matrix const&)
  [77] __static_initialization_and_destruction_0(int, int) [57] GEOS3() [11] Matrix::operator*(double)
  [78] __static_initialization_and_destruction_0(int, int) [73] mjday(int, int, int, int, int, double) [14] Matrix::operator+(Matrix const&)
  [79] __static_initialization_and_destruction_0(int, int) [70] sign_(double, double) [28] Matrix::operator+(double)
  [80] __static_initialization_and_destruction_0(int, int) [47] AzElPa(double&, double&, Matrix&, Matrix&, Matrix) [29] Matrix::operator()(int) const
  [81] __static_initialization_and_destruction_0(int, int) [6] Cheb3D(double, double, double, double, Matrix, Matrix, Matrix) [18] Matrix::operator()(int, int) const
  [82] __static_initialization_and_destruction_0(int, int) [51] GGM03S() [105] std::ios_base::setf(std::_Ios_Fmtflags, std::_Ios_Fmtflags)
  [83] __static_initialization_and_destruction_0(int, int) [10] VarEqn(double, Matrix) [106] std::setprecision(int)
  [84] __static_initialization_and_destruction_0(int, int) [2] DEInteg(Matrix (*)(double, Matrix), double, double, double, double, double, Matrix&) [107] std::operator&=(std::_Ios_Fmtflags&, std::_Ios_Fmtflags)
  [85] __static_initialization_and_destruction_0(int, int) [27] Legendre(Matrix&, Matrix&, int, int, double) [74] std::operator&(std::_Ios_Fmtflags, std::_Ios_Fmtflags)
  [86] __static_initialization_and_destruction_0(int, int) [56] Position(double, double, double) [108] std::operator~(std::_Ios_Fmtflags)
  [87] __static_initialization_and_destruction_0(int, int) [67] timediff(double, double, double&, double&, double&, double&, double&) [109] std::operator|=(std::_Ios_Fmtflags&, std::_Ios_Fmtflags)
  [88] __static_initialization_and_destruction_0(int, int) [32] GHAMatrix(double) [110] std::operator|(std::_Ios_Fmtflags, std::_Ios_Fmtflags)
  [89] __static_initialization_and_destruction_0(int, int) [71] Mjday_TDB(double) [15] operator*(double, Matrix)
  [90] __static_initialization_and_destruction_0(int, int) [24] NutAngles(double&, double&, double) [23] _init
